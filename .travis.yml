os: linux
dist: xenial
language: go

services:
  - docker

sudo: required

env:
  global:
    - CGO_ENABLED=0
    - GOFLAGS='-a -x'
    - WORKSPACE='/project'

branches:
  except:
    - /^travis-.*-build$/

matrix:
  include:
    - go: 1.12.x
      env: GOOS=linux GOARCH=amd64 DIST_FAMILY=RHEL DIST=rhel7 BIN=ercole-agent-virtualization GO111MODULE=on
        PACKAGE_BUILD_IMAGE=sorintdev/rpmbuild-centos7

before_install:
  - sudo docker pull ${PACKAGE_BUILD_IMAGE}
  - if [ -z ${TRAVIS_TAG} ] || [[ ${TRAVIS_TAG} == *-* ]]; then export VERSION=latest;
    else export VERSION=${TRAVIS_TAG}; fi
  - echo ${TRAVIS_TAG}
  - echo ${VERSION}

install:
  - sudo docker run -d --rm -it -e WORKSPACE="${WORKSPACE}" -e TRAVIS_REPO_SLUG="${TRAVIS_REPO_SLUG}"
    -e TRAVIS_BUILD_NUMBER="${TRAVIS_BUILD_NUMBER}" -v $PWD:"${WORKSPACE}" --name package_builder
    ${PACKAGE_BUILD_IMAGE} /bin/cat

script:
  - sed "s/\"latest\"/\"${VERSION}\"/" main.go > /tmp/main.go
  - cp /tmp/main.go main.go
  - go build -o ${BIN} main.go
  - sed -i "s|ERCOLE_VERSION|${VERSION}|g" package/rhel7/ercole-agent-virtualization.spec
  - if [ $DIST_FAMILY == "RHEL" ]; then docker exec -it package_builder /bin/sh -c "cd
    ${WORKSPACE} && rpmbuild --quiet -bl package/${DIST}/ercole-agent-virtualization.spec" || echo
    rpmbuild; fi
  - if [ $DIST_FAMILY == "RHEL" ]; then docker exec -it package_builder /bin/sh -c "mkdir
    ~/rpmbuild/SOURCES/ercole-agent-virtualization-${VERSION}"; fi
  - if [ $DIST_FAMILY == "RHEL" ]; then docker exec -it package_builder /bin/sh -c "cd
    ${WORKSPACE} && cp -r * ~/rpmbuild/SOURCES/ercole-agent-virtualization-${VERSION}/"; fi
  - if [ $DIST_FAMILY == "RHEL" ]; then docker exec -it package_builder /bin/sh -c "cd
    ${WORKSPACE} && tar -C ~/rpmbuild/SOURCES -cvzf ~/rpmbuild/SOURCES/ercole-agent-virtualization-${VERSION}.tar.gz
    ercole-agent-virtualization-${VERSION}"; fi
  - if [ $DIST_FAMILY == "RHEL" ]; then docker exec -it package_builder /bin/sh -c "cd
    ${WORKSPACE} && rpmbuild -bb package/${DIST}/ercole-agent-virtualization.spec"; fi
  - if [ $DIST_FAMILY == "RHEL" ]; then docker exec -it package_builder /bin/sh -c "find
    ~/rpmbuild/SOURCES/ercole-agent-virtualization-${VERSION}"; fi
  - mkdir dist
  - if [ $DIST_FAMILY == "RHEL" ]; then docker exec -it package_builder /bin/sh -c "cd
    ${WORKSPACE} && cp ~/rpmbuild/RPMS/x86_64/ercole-agent-virtualization-${VERSION}-1.el*.x86_64.rpm
    dist/"; fi

after_success:
  - ls
  - file ${BIN}
  - env
  - ls dist

before_deploy:
  - if [[ ${VERSION} == "latest" ]]; then git tag -f latest; fi
  - if [[ ${VERSION} == "latest" ]]; then git remote add gh https://simonerota:${GITHUB_RELEASE_TOKEN}@github.com/${TRAVIS_REPO_SLUG}.git; fi
  - if [[ ${VERSION} == "latest" ]]; then git push gh latest || true; fi
  - if [[ ${VERSION} == "latest" ]]; then git push -f gh latest; fi
  - if [[ ${VERSION} == "latest" ]]; then git remote remove gh; fi

deploy:
  provider: releases
  api_key: $GITHUB_RELEASE_TOKEN
  file_glob: true
  file: dist/*
  skip_cleanup: true
  name: $VERSION
  overwrite: true
  on:
    all_branches: true